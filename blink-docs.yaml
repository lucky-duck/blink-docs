openapi: 3.0.0
info:
  title: Blink Payment v1.0.20
  description: Blink Payment API Docs
  version: 1.0.0
  contact:
    name: Blink Payment
    email: developers@blinkpayment.co.uk
    url: blinkpayment.co.uk
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'https://secure.blinkpayment.co.uk'
  - url: 'https://gateway2.blinkpayment.co.uk'
tags:
  - name: CreditCards
    description: 'Operations concerning credit card information, from storing securely to processing transactions.'
  - name: DirectDebits
    description: 'Provides mechanisms to set up, modify, or cancel direct debit instructions with financial institutions.'
  - name: Intents
    description: 'Manages user intent processes, enabling the API to understand and respond to user actions.'
  - name: OpenBankings
    description: 'Integrates with open banking protocols, facilitating access to various banking services and data.'
  - name: Paylink
    description: 'Enables creation and management of payment links, streamlining the payment process for end-users.'
  - name: Tokens
    description: 'Handles all operations related to authentication tokens, such as creation, refresh, and validation.'
  - name: Transactions
    description: 'Offers an interface for transactional data, allowing for tracking, retrieval, and categorization of financial activities.'
paths:
  /api/pay/v1/tokens:
    post:
      tags:
        - Tokens
      summary: tokens
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  api_key: '{{api_key}}'
                  secret_key: '{{secret_key}}'
                  payment_api_status: true
                  send_blink_receipt: true
                  address_postcode_required: true
                  enable_moto_payments: true
                  card_layout: single-line
              properties:
                api_key:
                  type: string
                  description: |
                    256 alpha numeric, obtained through the Blink platform. 
                secret_key:
                  type: string
                  description: |
                    256 alpha numeric, obtained through the Blink platform. 
                payment_api_status:
                  type: boolean
                  description: |
                    To enable payment API , value should be set to true. This field is optional. If not passed, default value is true.

                    - true
                    - false
                send_blink_receipt:
                  type: boolean
                  description: |-
                    To enable Blink receipt feature after any transaction , value should be set to true. This field is optional. If not passed, default value is false.

                    - true
                    - false
                address_postcode_required:
                  type: boolean
                  description: |-
                    To fetch address and postcode details of any user for any transaction , value should be set to true. This field is optional. If not passed, default value is false.

                    - true
                    - false
                enable_moto_payments:
                  type: boolean
                  description: |-
                    To enable MOTO payment feature for any transaction , value should be set to true. This field is optional. If not passed, default value is false.

                    - true
                    - false
              required:
                - api_key
                - secret_key
            examples:
              Example 1:
                value:
                  api_key: 49f98f211008be298aaa244...
                  secret_key: 44b51da04a1ff0caa73afd...
                  payment_api_status: true
                  send_blink_receipt: true
                  address_postcode_required: true
                  enable_moto_payments: true
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudF9pZCI6NDM5OCwic2VjcmV0X2tleSI6IjYzMTBlNDhiZGQwZTQzODE0NTlhNjJiNDZkMmM0ZmQ2ZThhYjY1YTJhNGQ1MjA1YzZjM2RkZWJmYmJhZWJiZjgiLCJleHAiOjE2OTE1NzYyNDJ9.2x7nhth9SBKN_9rGCXppGO5Soqbf8PvJS_4MEAQP4Kk
                    expired_on: '2023-08-09T11:17:22Z'
                    payment_types:
                      - credit-card
                      - open-banking
                    currency: GBP
                    payment_api_status: true
                    send_blink_receipt: true
                    enable_moto_payments: true
                    address_postcode_required: true
                properties:
                  access_token:
                    type: string
                  expired_on:
                    type: string
                  payment_types:
                    type: array
                    items:
                      type: string
                  currency:
                    type: string
                  payment_api_status:
                    type: boolean
                  send_blink_receipt:
                    type: boolean
                  address_postcode_required:
                    type: boolean
                  enable_moto_payments:
                    type: boolean
              examples:
                example-0:
                  summary: 400 Bad Request
                  value:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbG...
                    expired_on: '2023-01-01T12:00:00Z'
                    payment_types:
                      - credit-card
                      - open-banking
                      - direct-debit
                    currency: GBP
                    payment_api_status: true
                    send_blink_receipt: true
                    address_postcode_required: true
                    enable_moto_payments: true
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expired_on:
                    type: string
                  payment_types:
                    type: array
                    items:
                      type: string
                  currency:
                    type: string
                  payment_api_status:
                    type: boolean
                  send_blink_receipt:
                    type: boolean
                  address_postcode_required:
                    type: boolean
                  enable_moto_payments:
                    type: boolean
                x-examples:
                  Example 1:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbG...
                    expired_on: '2023-01-01T12:00:00Z'
                    payment_types:
                      - credit-card
                      - open-banking
                      - direct-debit
                    currency: GBP
                    payment_api_status: true
                    send_blink_receipt: true
                    address_postcode_required: true
                    enable_moto_payments: true
              example:
                access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudF9pZCI6NDM5OCwic2VjcmV0X2tleSI6IjYzMTBlNDhiZGQwZTQzODE0NTlhNjJiNDZkMmM0ZmQ2ZThhYjY1YTJhNGQ1MjA1YzZjM2RkZWJmYmJhZWJiZjgiLCJleHAiOjE2OTE1NzYyNDJ9.2x7nhth9SBKN_9rGCXppGO5Soqbf8PvJS_4MEAQP4Kk
                expired_on: '2023-08-09T11:17:22Z'
                payment_types:
                  - credit-card
                  - open-banking
                currency: GBP
                payment_api_status: true
                send_blink_receipt: true
                enable_moto_payments: true
                address_postcode_required: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  expired_on:
                    type: string
                  payment_types:
                    type: array
                    items:
                      type: string
                  currency:
                    type: string
                  send_blink_receipt:
                    type: string
                x-examples:
                  Example 1:
                    access_token: ffaabb123456789012ffaabb123456789012...
                    expired_on: '2023-02-15T07:19:27Z'
                    payment_types:
                      - credit-card
                      - open-banking
                      - direct-debit
                    currency: GBP
                    send_blink_receipt: 'No'
      description: |-
        To authenticate requests, the Blink API uses an api_key and secret_key combination, which is used to obtain an access_token for your session.

        HTTP Basic Auth is used for authentication. The access_token should be used via bearer in the header to authenticate all requests, e.g. Authentication: Bearer {{access_token}}.

        Access token is expired after 30 minutes. Then, you need to create a new token.

        You can manage and renew your keys on the Blink platform. In case you do not see the keys, simply reach out to support to get set up.

        It is essential to keep your API keys secure as they hold significant privileges. Refrain from sharing your secret API keys in public areas such as GitHub, client-side code, etc.

        All API requests must be made over HTTPS. Requests made over plain HTTP will be unsuccessful. API requests that lack authentication will also fail.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      operationId: tokens
  /api/pay/v1/intents:
    post:
      tags:
        - Intents
      summary: intents
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  amount: '1.1'
                  transaction_type: SALE
                  payment_type: credit-card
                  currency: GBP
                  return_url: 'https://api-demo-php.blinkpayment.co.uk/return'
                  notification_url: 'https://api-demo-php.blinkpayment.co.uk/notification'
                  card_layout: single-line
              properties:
                amount:
                  type: number
                  description: |
                    Transaction amount.
                transaction_type:
                  type: string
                  description: |-
                    Default value is set to SALE. If passed, it can only be one of the following:

                    - SALE
                    - VERIFY
                    - PREAUTH 
                    - CREDIT
                payment_type:
                  type: string
                  description: |
                    Can only be one of the following:

                    - credit-card
                    - direct-debit
                    - open-banking 
                currency:
                  type: string
                  description: |
                    Three letter currency code (ISO 4217) e.g USD, GBP.
                return_url:
                  type: string
                  description: |
                    GET URL on your domain, where Blink will redirect after transaction is processed e.g. https://mydomain.com/return.
                notification_url:
                  type: string
                  description: |
                    POST URL on your domain, where Blink will send status updates when the transaction status is changed e.g. https://mydomain.com/notification.
                card_layout:
                  type: string
                  description: |
                    To get different structure of card layout for any transaction , this parameter is passed. This field is optional. If not passed, default value is basic.

                    - basic
                    - single-line
                    - multi-line
                customer_name:
                  type: string
                  x-stoplight:
                    id: omgo5ckao1sci
                  description: |
                    Customer name.
                customer_email:
                  type: string
                  x-stoplight:
                    id: dxjloewuudujq
                  description: Customer email.
                customer_address:
                  type: string
                  x-stoplight:
                    id: p8nz05oivpay7
                  description: |
                    Customer address.
                customer_postcode:
                  type: string
                  x-stoplight:
                    id: znuzvib454i4h
                  description: |
                    Customer postcode.
              required:
                - amount
                - transaction_type
                - payment_type
                - currency
                - return_url
                - notification_url
            examples:
              Example 1:
                value:
                  amount: 1.01
                  transaction_type: SALE
                  delay_capture_days: 3
                  payment_type: credit-card
                  currency: GBP
                  return_url: 'https://mydomain.com/return'
                  notification_url: 'https://mydomain.com/notification'
        description: ''
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  payment_intent:
                    type: string
                  transaction_type:
                    type: string
                  expiry_date:
                    type: string
                  amount:
                    type: number
                  currency:
                    type: string
                  payment_type:
                    type: string
                  return_url:
                    type: string
                  notification_url:
                    type: string
                  card_layout:
                    type: string
                  element:
                    type: object
                    properties:
                      ccElement:
                        type: string
                      ccMotoElement:
                        type: string
                      ddElement:
                        type: string
                      obElement:
                        type: string
                  merchant_id:
                    type: integer
                  transaction_unique:
                    type: string
              examples:
                Example 1:
                  value:
                    id: 123
                    payment_intent: pi_Swhc84aSLtUGppvPARX...
                    transaction_type: SALE
                    expiry_date: '2023-04-19T10:19:17Z'
                    amount: 1.01
                    currency: GBP
                    payment_type: credit-card
                    return_url: 'https://mydomain.com/return'
                    notification_url: 'https://mydomain.com/notification'
                    card_layout: single-line
                    element:
                      ccElement: |-
                        <input type="hidden" name="merchantID" value="14456"/>
                                      <input type="hidden" name="payment_intent" value="pi_pqXuNE8rO************************1I2uPcipp1d8qSDTSPIucQyrNNa1UiyBYsBTCffUn9zkGVd3a_94uxXgNb-LD5jaMk"/>
                         <input type="hidden" name="resource" value="creditcards"/>
                           <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                                      <input type="text" name="customer_name" value="" placeholder="Name on card" /><br>
                             <input type="text" name="customer_email" value="" placeholder="Email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                      <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br><input type="hostedfield:cardNumber" placeholder="1234 1234 1234 1234"/><br>
                          <input type="hostedfield:cardExpiryDate" placeholder="MM/YY"/><br>
                          <input type="hostedfield:cardCVV" placeholder="CVV"/><br>
                          <input type="hidden" id="device_timezone" name="device_timezone" /><br>
                          <input type="hidden" id="device_capabilities" name="device_capabilities" /><br>
                         <input type="hidden" id="device_accept_language" name="device_accept_language" /><br>
                          <input type="hidden" id="device_screen_resolution" name="device_screen_resolution" /><br>
                         <input type="hidden" id="remote_address" name="remote_address" /><br>
                         input type="hidden" id="type" name="type" value="1"/><br>
                      ccMotoElement: |-
                        <input type="hidden" name="merchantID" value="145671"/>
                                      <input type="hidden" name="payment_intent" value="pi_pqXuNE8rOEmUN0vtQqgf8NnkuQJq4LyOVVz-nz*************************QyrNNa1UiyBYsBTCffUn9zkGVd3a_94uxXgNb-LD5jaMk"/>
                          <input type="hidden" name="resource" value="creditcards"/>
                           <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                                      <input type="text" name="customer_name" value="" placeholder="Name on card" /><br>
                             <input type="text" name="customer_email" value="" placeholder="Email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                      <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br><input type="hostedfield:cardNumber" placeholder="1234 1234 1234 1234"/><br>
                          <input type="hostedfield:cardExpiryDate" placeholder="MM/YY"/><br>
                          <input type="hostedfield:cardCVV" placeholder="CVV"/><br>
                         <input type="hidden" id="type" name="type" value="2"/><br>
                      ddElement: |-
                        <input type="hidden" name="payment_intent" value="pi_pqXuNE8rOEmUN0vtQqgf8NnkuQJq4LyOVVz-nzcR81I2uPcipp1d8qSDTSPIucQyrNNa1UiyBYsBTCffU*******************uxXgNb-LD5jaMk"/>
                          <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                           <input type="hidden" name="resource" value="directdebits"/>
                          <input type="text" placeholder="Given Name" name="given_name"/><br>
                                      <input type="text" placeholder="Family Name" name="family_name"/><br>
                                      <input type="text" placeholder="Company Name" name="company_name"/><br>
                                      <input type="text" placeholder="Email" name="email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                         <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br><input type="text" placeholder="Account Holder Name" name="account_holder_name"/><br>
                                   <input type="text" placeholder="Branch Code" name="branch_code"/><br>
                                      <input type="text" placeholder="Bank Account Number" name="account_number"/><br>
                      obElement: |-
                        <input type="hidden" name="merchant_id" value="140567"/>
                                      <input type="hidden" name="payment_intent" value="pi_pqXuNE8rOEmUN0vtQq*************************d8qSDTSPIucQyrNNa1UiyBYsBTCffUn9zkGVd3a_94uxXgNb-LD5jaMk"/>
                          <input type="hidden" name="resource" value="openbankings"/>
                          <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                                      <input type="text" name="user_name" value="" placeholder="Name on card" /><br>
                                 <input type="text" name="user_email" value="" placeholder="Email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                      <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br>
                    merchant_id: 134857
                    transaction_unique: xbKXyWkIL...
      description: |-
        Authenticate requests using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request. 

        Once a payment intent is processed i.e. payment is done using any payment type, it can’t be used again to perform another transaction.Each payment intent can be used for only one payment type.

        Please follow the below structure for respective payment form where ccElement  or ccMotoElement will be added. Here a custom css file has been added to support different card layout (i.e. single-line and multi-line).

        ```
        <head>
          ...
          <script src="https://secure.blinkpayment.co.uk/assets/css/api.css"></script>
          ...
        </head>

        <body>
           ....
        </body>
        ```
      operationId: intents
  '/api/pay/v1/intents/{intent_id}':
    get:
      tags:
        - Intents
      summary: Get intent
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG
        - name: intent_id
          in: path
          description: The id of the payment intent
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  payment_intent:
                    type: string
                  transaction_type:
                    type: string
                  expiry_date:
                    type: string
                  status:
                    type: string
                  amount:
                    type: number
                  currency:
                    type: string
                  payment_type:
                    type: string
                  return_url:
                    type: string
                  notification_url:
                    type: string
                  card_layout:
                    type: string
                  element:
                    type: object
                    properties:
                      ccElement:
                        type: string
                      ccMotoElement:
                        type: string
                      ddElement:
                        type: string
                      obElement:
                        type: string
                  merchant_id:
                    type: integer
                  transaction_unique:
                    type: string
                x-examples:
                  Example 1:
                    id: 123
                    payment_intent: pi_Swhc84aSLtUGppvPARX...
                    transaction_type: SALE
                    expiry_date: '2023-04-19T10:19:17Z'
                    status: active
                    amount: 1.01
                    currency: GBP
                    payment_type: credit-card
                    return_url: 'https://mydomain.com/return'
                    notification_url: 'https://mydomain.com/notification'
                    card_layout: single-line
                    element:
                      ccElement: |-
                        <input type="hidden" name="merchantID" value="140****"/>
                                      <input type="hidden" name="payment_intent" value="pi_pqXuNE8rOEmUN0vtQqgf*******************8qSDTSPIucQyrNNa1UiyBYsBTCffUn9zkGVd3a_94uxXgNb-LD5jaMk"/>
                         <input type="hidden" name="resource" value="creditcards"/>
                           <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                                      <input type="text" name="customer_name" value="" placeholder="Name on card" /><br>
                             <input type="text" name="customer_email" value="" placeholder="Email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                      <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br><input type="hostedfield:cardNumber" placeholder="1234 1234 1234 1234"/><br>
                          <input type="hostedfield:cardExpiryDate" placeholder="MM/YY"/><br>
                          <input type="hostedfield:cardCVV" placeholder="CVV"/><br>
                          <input type="hidden" id="device_timezone" name="device_timezone" /><br>
                          <input type="hidden" id="device_capabilities" name="device_capabilities" /><br>
                         <input type="hidden" id="device_accept_language" name="device_accept_language" /><br>
                          <input type="hidden" id="device_screen_resolution" name="device_screen_resolution" /><br>
                         <input type="hidden" id="remote_address" name="remote_address" /><br>
                         input type="hidden" id="type" name="type" value="1"/><br>
                      ccMotoElement: |-
                        <input type="hidden" name="merchantID" value="146***"/>
                                      <input type="hidden" name="payment_intent" value="pi_pqXuNE8rOEmUN0vtQqgf8NnkuQJq4LyO*********************1d8qSDTSPIucQyrNNa1UiyBYsBTCffUn9zkGVd3a_94uxXgNb-LD5jaMk"/>
                          <input type="hidden" name="resource" value="creditcards"/>
                           <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                                      <input type="text" name="customer_name" value="" placeholder="Name on card" /><br>
                             <input type="text" name="customer_email" value="" placeholder="Email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                      <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br><input type="hostedfield:cardNumber" placeholder="1234 1234 1234 1234"/><br>
                          <input type="hostedfield:cardExpiryDate" placeholder="MM/YY"/><br>
                          <input type="hostedfield:cardCVV" placeholder="CVV"/><br>
                         <input type="hidden" id="type" name="type" value="2"/><br>
                      ddElement: |-
                        <input type="hidden" name="payment_intent" value="pi_pqXu******************************************XgNb-LD5jaMk"/>
                          <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                           <input type="hidden" name="resource" value="directdebits"/>
                          <input type="text" placeholder="Given Name" name="given_name"/><br>
                                      <input type="text" placeholder="Family Name" name="family_name"/><br>
                                      <input type="text" placeholder="Company Name" name="company_name"/><br>
                                      <input type="text" placeholder="Email" name="email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                          <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br><input type="text" placeholder="Account Holder Name" name="account_holder_name"/><br>
                                   <input type="text" placeholder="Branch Code" name="branch_code"/><br>
                                      <input type="text" placeholder="Bank Account Number" name="account_number"/><br>
                      obElement: |-
                        <input type="hidden" name="merchant_id" value="14*****"/>
                                      <input type="hidden" name="payment_intent" value="pi_pqXuNE8rOEmUN0vtQqgf8NnkuQJq4Ly**********************SDTSPIucQyrNNa1UiyBYsBTCffUn9zkGVd3a_94uxXgNb-LD5jaMk"/>
                          <input type="hidden" name="resource" value="openbankings"/>
                          <input type="hidden" name="transaction_unique" value="OiXWrlnKvvfh"/>
                                      <input type="text" name="user_name" value="" placeholder="Name on card" /><br>
                                 <input type="text" name="user_email" value="" placeholder="Email"/><br><input type="text" placeholder="Address" name="customer_address" value="" /><br>
                                      <input type="text" placeholder="Postcode" name="customer_postcode" value="" /><br>
                    merchant_id: 134857
                    transaction_unique: xbKXyWkIL...
              example:
                id: 73
                payment_intent: pi_yrmGSPgTvW3TcdbTx-gavuVBBN2nYxsXhMVNYKtmQmM3btDUwwzyclq1fbpRrI2SVdHbC7UAsdt88J9DwYL26tTvLrArg_2yKbuGGZy9im0
                transaction_type: SALE
                expiry_date: '2023-08-09T11:17:22Z'
                status: active
                payment_type: credit-card
                currency: GBP
                amount: 1.1
                return_url: 'https://api-demo-php.blinkpayment.co.uk/return'
                notification_url: 'https://api-demo-php.blinkpayment.co.uk/notification'
                card_layout: single-line
                element:
                  ccElement: |-
                    <input type="hidden" name="merchantID" value="233508"/>
                                  <input type="hidden" name="payment_intent" value="pi_yrmGSPgTvW3TcdbTx-gavuVBBN2nYxsXhMVNYKtmQmM3btDUwwzyclq1fbpRrI2SVdHbC7UAsdt88J9DwYL26tTvLrArg_2yKbuGGZy9im0"/>
                                  <input type="hidden" name="resource" value="creditcards"/>
                                  <input type="hidden" name="transaction_unique" value="BBwbjdIpjNQ2"/><label class="field-label">Card information</label>
                                <div class="fieldgroup-container relative no-wrap mb-4">
                                    <input type="hostedfield:cardNumber" placeholder="1234 1234 1234 1234" />
                                    <input type="hostedfield:cardExpiryDate" placeholder="MM/YY" />
                                    <input type="hostedfield:cardCVV" placeholder="CVV" />
                                </div><label class="field-label">Name on card</label>
                            <div class="fieldgroup-container mb-4">
                                <input type="text" name="customer_name" value="" />
                            </div> 
                            <label class="field-label">Email</label>
                            <div class="fieldgroup-container mb-4">
                                <input type="text" name="customer_email" value="" />
                            </div><label class="field-label">Address</label>
                          <div class="fieldgroup-container mb-4">
                              <div class="fieldgroup-child--width-8">
                                  <input type="text" name="customer_address" value="" />
                              </div>
                              <div class="fieldgroup-child--width-4">
                                  <input type="text" name="customer_postcode" value="" placeholder="Postcode" />
                              </div>
                          </div><input type="hidden" id="device_timezone" name="device_timezone" />
                                  <input type="hidden" id="device_capabilities" name="device_capabilities" />
                                  <input type="hidden" id="device_accept_language" name="device_accept_language" />
                                  <input type="hidden" id="device_screen_resolution" name="device_screen_resolution" />
                                  <input type="hidden" id="remote_address" name="remote_address" />
                                  <input type="hidden" id="type" name="type" value="1"/>
                  ccMotoElement: |-
                    <input type="hidden" name="merchantID" value="233508"/>
                                  <input type="hidden" name="payment_intent" value="pi_yrmGSPgTvW3TcdbTx-gavuVBBN2nYxsXhMVNYKtmQmM3btDUwwzyclq1fbpRrI2SVdHbC7UAsdt88J9DwYL26tTvLrArg_2yKbuGGZy9im0"/>
                                  <input type="hidden" name="resource" value="creditcards"/>
                                  <input type="hidden" name="transaction_unique" value="BBwbjdIpjNQ2"/>
                                  <input type="hidden" id="type" name="type" value="2"/><label class="field-label">Card information</label>
                                    <div class="fieldgroup-container relative no-wrap mb-4">
                                        <input type="hostedfield:cardNumber" placeholder="1234 1234 1234 1234" />
                                        <input type="hostedfield:cardExpiryDate" placeholder="MM/YY" />
                                        <input type="hostedfield:cardCVV" placeholder="CVV" />
                                    </div><label class="field-label">Name on card</label>
                            <div class="fieldgroup-container mb-4">
                                <input type="text" name="customer_name" value="" />
                            </div> 
                            <label class="field-label">Email</label>
                            <div class="fieldgroup-container mb-4">
                                <input type="text" name="customer_email" value="" />
                            </div><label class="field-label">Address</label>
                          <div class="fieldgroup-container mb-4">
                              <div class="fieldgroup-child--width-8">
                                  <input type="text" name="customer_address" value="" />
                              </div>
                              <div class="fieldgroup-child--width-4">
                                  <input type="text" name="customer_postcode" value="" placeholder="Postcode" />
                              </div>
                          </div>
                  obElement: |-
                    <input type="hidden" name="merchant_id" value="233508"/>
                                  <input type="hidden" name="payment_intent" value="pi_yrmGSPgTvW3TcdbTx-gavuVBBN2nYxsXhMVNYKtmQmM3btDUwwzyclq1fbpRrI2SVdHbC7UAsdt88J9DwYL26tTvLrArg_2yKbuGGZy9im0"/>
                                  <input type="hidden" name="resource" value="openbankings"/>
                                  <input type="hidden" name="transaction_unique" value="BBwbjdIpjNQ2"/><div class="fieldgroup-container mb-4">
                                      <input type="text" placeholder="Name" name="customer_name" value="" />
                                  </div> 
                                  <div class="fieldgroup-container mb-4">
                                      <input type="text" placeholder="Email" name="customer_email" value="" />
                                  </div><div class="fieldgroup-container mb-4">
                                  <div class="fieldgroup-child--width-8">
                                      <input type="text" placeholder="Address" name="customer_address" value="" />
                                  </div>
                                  <div class="fieldgroup-child--width-4">
                                      <input type="text" name="customer_postcode" value="" placeholder="Postcode" />
                                  </div>
                              </div>
                merchant_id: 233508
                transaction_unique: BBwbjdIpjNQ2
      x-stoplight:
        id: bbf6de6oyl7sb
      description: Get details for a payment intent
      operationId: get-intent
    patch:
      tags:
        - Intents
      summary: Update intent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                return_url:
                  type: string
                  description: Return url.
                notification_url:
                  type: string
                  description: Notification url.
            examples:
              Example 1:
                value:
                  return_url: 'https://mydomain.com/return'
                  notification_url: 'https://mydomain.com/notification'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG
        - name: intent_id
          in: path
          description: Id of the payment intent
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  payment_intent:
                    type: string
                  transaction_type:
                    type: string
                  expiry_date:
                    type: string
                  status:
                    type: string
                  amount:
                    type: number
                  currency:
                    type: string
                  payment_type:
                    type: string
                  return_url:
                    type: string
                  notification_url:
                    type: string
                  card_layout:
                    type: string
                  element:
                    type: object
                    properties:
                      ccElement:
                        type: string
                      ccMotoElement:
                        type: string
                      ddElement:
                        type: string
                      obElement:
                        type: string
                  merchant_id:
                    type: integer
                  transaction_unique:
                    type: string
      x-stoplight:
        id: gmum1e2nx9zfq
      description: 'Payment Intent with status as active can only be updated. Once an intent is processed, it can’t be updated.'
      operationId: update-intent
    parameters:
      - schema:
          type: string
        name: intent_id
        in: path
        required: true
        description: The id of the payment intent
  /paymentform:
    post:
      tags:
        - CreditCards
      summary: Payment page
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                process:
                  type: string
                  example: tokenise
                merchantID:
                  type: string
                  example: '{{merchant_id}}'
                tokenType:
                  type: string
                  example: card
                'tokenData[cardNumber]':
                  type: integer
                  example: 4111111111111111
                'tokenData[cardExpiryDate]':
                  type: string
                  example: 12/23
                'tokenData[cardCVV]':
                  type: integer
                  example: 123
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  paymentToken:
                    type: string
                  cardMask:
                    type: string
                  cardInfo:
                    type: object
                    properties:
                      typeCode:
                        type: string
                      typeName:
                        type: string
                      schemeCode:
                        type: string
                      schemeName:
                        type: string
                      flags:
                        type: string
                      productCode:
                        type: string
                      issuer:
                        type: string
              examples:
                Example 1:
                  value:
                    success: true
                    message: Success
                    paymentToken: eyJwYXltZW50VG9rZW4iOnsibWV0aG9kIjoiY2FyZCIsInJlc291cmNlIjoic3RvcmUiLCJpZCI6MjkyMjE5NX19
                    cardMask: 411111******1111
                    cardInfo:
                      typeCode: VC
                      typeName: Visa Credit
                      schemeCode: VC
                      schemeName: Visa
                      flags: '4128772'
                      productCode: '0'
                      issuer: string
      description: |-
        To process Credit Card requests, three files must be included in the header section of your payment page. When the submit button is clicked, the three script files automatically trigger a Blink API  to tokenize the hosted card fields and generate a payment token. This generated payment token is automatically inserted into the payment form, then the whole form with the payment token is submitted. 

        In a PHP implementation, your payment page may look like this:


        ```
        <head>
          ...
          <script src="https://code.jquery.com/jquery-3.6.3.min.js"></script>
          <script src="https://gateway2.blinkpayment.co.uk/sdk/web/v1/js/hostedfields.min.js"></script>
          <script src="https://secure.blinkpayment.co.uk/assets/js/api/custom.js"></script>
          ...
        </head>

        <body>
            <form method="POST" action="process" id="payment">
                @csrf
                {!! $element !!}
                <input type="hidden" id="merchant_data" name="merchant_data" value="{\"order_id\": \"12345\"}" />
                <button type="submit">Submit</button>
            </form>
        </body>
        ```
      operationId: payment-page
  /api/pay/v1/creditcards:
    post:
      tags:
        - CreditCards
      summary: Create credit card payment for MOTO
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  payment_intent: pi_1A2B3C4D5E6F7G
                  paymentToken: ptok_1A2B3C4D5E6F7G
                  type: 1
                  customer_email: john.doe@example.com
                  customer_name: John Doe
                  transaction_unique: trans_1A2B3C4D5E6F7G
                  merchant_data: '{"order_id": "cc-12345678"}'
                  device_timezone: '-330'
                  device_capabilities: javascript
                  device_accept_language: en-GB
                  device_screen_resolution: 1366x768x24
                  remote_address: 123.123.123.123
              properties:
                payment_intent:
                  type: string
                  description: Payment intent token.
                paymentToken:
                  type: string
                  description: Payment token generated from Create Payment Token request.
                type:
                  type: integer
                  description: Type 1 is ECOM payment and type 2 is MOTO.  Default value is 1 i.e. ECOM.
                customer_email:
                  type: string
                  description: 'Customer email. If not present, it will fetch value from Intent resource.'
                customer_name:
                  type: string
                  description: 'Customer name. If not present, it will fetch value from Intent resource.'
                customer_address:
                  type: string
                  description: 'User’s address details. If not present, it will fetch value from Intent resource.'
                  x-stoplight:
                    id: m3ph497pflqxt
                customer_postcode:
                  type: string
                  description: 'User’s postcode. If not present, it will fetch value from Intent resource.'
                  x-stoplight:
                    id: 1op1hnr1jm91a
                transaction_unique:
                  type: string
                  description: Transaction unique.
                merchant_data:
                  type: object
                  description: |-
                    The merchant can add custom key value pairs in JSON format, for example:
                    {
                      "my_order_id": 123,
                      "fancy_note": "Order complete",
                      "card_discount": false
                    }
                  x-stoplight:
                    id: o2h548mdurwk2
                device_timezone:
                  type: string
                  description: Device timezone value which can be fetched using javascript and assigned to the respective hosted input field. This value is required in 3DS.
                device_capabilities:
                  type: string
                  description: Device capabilities which can be fetched using javascript and assigned to the respective hosted input field. This value is required in 3DS.
                device_accept_language:
                  type: string
                  description: Device accept language which can be fetched using javascript and assigned to the respective hosted input field. This value is required in 3DS.
                device_screen_resolution:
                  type: string
                  description: Device screen resolution which can be fetched using javascript and assigned to the respective hosted input field. This value is required in 3DS.
                remote_address:
                  type: string
                  description: Remote address which can be fetched using javascript and assigned to the respective hosted input field. This value is required in 3DS.
              required:
                - payment_intent
                - paymentToken
                - transaction_unique
                - merchant_data
                - device_timezone
                - device_capabilities
                - device_accept_language
                - device_screen_resolution
                - remote_address
            examples:
              Example 1:
                value:
                  payment_intent: pi_Swhc84aSLtUGppvPARX...
                  paymentToken: eyJwYXltZW50VG9rZW4iOns...
                  type: 1
                  raw_amount: 1.1
                  customer_email: random@email.com
                  customer_name: A Smith
                  transaction_unique: PHnRNzjUw...
                  device_timezone: '-330'
                  device_capabilities: javascript
                  device_accept_language: en-GB
                  device_screen_resolution: 1366x768x24
                  remote_address: 123.123.123.123
                  merchant_data:
                    my_order_id: cc-12345678
        description: ''
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                url: 'https://api-demo-php.blinkpayment.co.uk/return?transaction_id=BL-QRUNPZKZMZ&status=captured&note=Success&merchant_data=%257B%2522order_id%2522%253A%2522cc-12345678%2522%257D'
      description: |-
        There are two ways to process a credit card: 

        1. ECOM (which usually requires 3DS)

        ECOM payment is the default type and returns an acsform, which is a HTML from used to perform the 3DS authentication.

        A HTML page should be send to the user which include the acsform in the body and the following JS in the header:


        ```
        <script>
          onload = () => document.forms[0].submit();
        </script>
        The user will complete the 3DS form and submit. 
        ```

        After submission, the user will be returned to the predefined return URL with an encoded transaction ID.


        2. MOTO (without 3DS).

        MOTO payment processes the payment without the 3DS check. Once the payment is processed the user will be returned to the predefined return URL with an url encoded transaction response.
      operationId: credit-cards
  /api/pay/v1/openbankings:
    post:
      tags:
        - OpenBankings
      summary: Open banking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  payment_intent: pi_Swhc84aSLtUGppvPARX...
                  customer_email: random@email.com
                  customer_name: A Smith
                  customer_address: 123 Some Street
                  customer_postcode: E127DF
                  transaction_unique: syuryui
                  merchant_data: '{"my_order_id": "ob-12345678"}'
              properties:
                payment_intent:
                  type: string
                  description: Payment intent token.
                customer_email:
                  type: string
                  description: Customer email.
                customer_name:
                  type: string
                  description: Customer name.
                customer_address:
                  type: string
                  description: User’s address details.
                customer_postcode:
                  type: string
                  description: User’s postcode.
                transaction_unique:
                  type: string
                  description: Transaction unique.
                merchant_data:
                  type: object
                  description: |-
                    The merchant can add custom key value pairs in JSON format, for example:
                    {
                      "my_order_id": 123,
                      "fancy_note": "Order complete",
                      "card_discount": false
                    }
              required:
                - payment_intent
                - customer_email
                - customer_name
                - transaction_unique
            examples:
              Example 1:
                value:
                  payment_intent: pi_Swhc84aSLtUGppvPARX...
                  customer_email: random@email.com
                  customer_name: A Smith
                  transaction_unique: syuryui
                  merchant_data:
                    my_order_id: ob-12345678
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirect_url:
                    type: string
                x-examples:
                  Example 1:
                    redirect_url: 'https://fidelitygate.devandops.com/tobp-gateway/hppcallredirect/643f****************'
              example:
                redirect_url: 'https://fidelitygate.devandops.com/tobp-gateway/hppcallredirect/642aaa2c0f10d48508f3ddf8'
      description: 'Process the payment and return the banking server redirect url as response. After completion of the transaction, user will be redirected to the return url with url encoded transaction response.'
      operationId: open-banking
  /api/pay/v1/directdebits:
    post:
      tags:
        - DirectDebits
      summary: Direct debits
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  payment_intent: pi_Swhc84aSLtUGppvPARX
                  given_name: test
                  family_name: test
                  email: random@gmail.com
                  country_code: GB
                  customer_address: 12/B Example St.
                  customer_postcode: '12000'
                  account_holder_name: test account holder
                  branch_code: '20000'
                  account_number: '579000'
                  merchant_data:
                    my_order_id: dd-12345678
              properties:
                payment_intent:
                  type: string
                  description: Payment intent token.
                given_name:
                  type: string
                  description: User’s given name or first name.
                family_name:
                  type: string
                  description: User’s family name or Surname.
                email:
                  type: string
                  description: User’s email address.
                country_code:
                  type: string
                  description: ISO country code. Default value GB.
                customer_address:
                  type: string
                  description: User’s address details.
                customer_postcode:
                  type: string
                  description: User’s postcode.
                account_holder_name:
                  type: string
                  description: User’s bank account name.
                branch_code:
                  type: string
                  description: User’s bank short code.
                account_number:
                  type: string
                  description: User’s bank account number.
                merchant_data:
                  type: string
                  description: |-
                    The merchant can add custom key value pairs in JSON format, for example:
                    {
                      "my_order_id": 123,
                      "fancy_note": "Order complete",
                      "card_discount": false
                    }
                company_name:
                  type: string
                  description: User’s company name. It’s required only if user’s given name and family name are not present.
                  x-stoplight:
                    id: nr7drag788jpt
              required:
                - payment_intent
                - given_name
                - family_name
                - email
                - country_code
                - account_holder_name
                - branch_code
                - account_number
            examples:
              Example 1:
                value:
                  payment_intent: pi_Swhc84aSLtUGppvPARX
                  given_name: test
                  family_name: test
                  email: random@gmail.com
                  country_code: GB
                  customer_address: 12/B Example St.
                  customer_postcode: '12000'
                  account_holder_name: test account holder
                  branch_code: '20000'
                  account_number: '579000'
                  merchant_data: '{"my_order_id": "dd-12345678"}'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
              examples:
                Example 1:
                  value:
                    url: 'https://api-demo-php.blinkpayment.co.uk/return?transaction_id=BL-002A12345&status=Pending%2BSubmission&note=Pending%2BSubmission&merchant_data=%257B%2522order_id%2522%253A%2522dd-12345678%2522%257D'
      description: Process the payment and return to the user defined URL with url encoded transaction response.
      operationId: direct-debits
  '/api/pay/v1/transactions/{transaction_id}':
    get:
      tags:
        - Transactions
      summary: Get transaction
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: transaction_id
          in: path
          description: The id of the transaction
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    data:
                      transaction_id: BL-0023C7F155
                      status: Pending Submission
                      message: Pending Submission
                      amount: 1.1
                      currency: GBP
                      payment_source: Direct Debit
                      customer_name: Test User
                      customer_email: testuser77888@yopmail.com
                      merchant_data:
                        order_id: 1234567
                properties:
                  data:
                    type: object
                    properties:
                      transaction_id:
                        type: string
                      status:
                        type: string
                      message:
                        type: string
                      amount:
                        type: number
                      currency:
                        type: string
                      payment_source:
                        type: string
                      customer_name:
                        type: string
                      customer_email:
                        type: string
                      merchant_data:
                        type: object
              examples:
                example-0:
                  summary: Transaction details - CC
                  value:
                    data:
                      transaction_id: BL-54URV6DLR5
                      status: Captured
                      message: Payment Successful
                      amount: 1.1
                      currency: GBP
                      payment_source: Visa Credit Card
                      customer_name: Miss Olivia Treutel
                      customer_email: Fausto0@gmail.com
                      merchant_data:
                        order_id: 12345678
                example-1:
                  summary: Transaction details - DD
                  value:
                    data:
                      transaction_id: BL-0056F27B6A
                      status: Pending Submission
                      message: Pending Submission
                      amount: 1.1
                      currency: GBP
                      payment_source: Direct Debit
                      customer_name: Jermaine Ernser
                      customer_email: Devan.Price40@yahoo.com
                      merchant_data:
                        order_id: dd-12345678
                example-2:
                  summary: Transaction details - OB
                  value:
                    data:
                      transaction_id: BL-00C902BB94
                      status: Success
                      message: Success
                      amount: 1.1
                      currency: GBP
                      payment_source: Open Banking
                      customer_name: Nettie Stehr
                      customer_email: Hugh.McLaughlin@hotmail.com
                      merchant_data:
                        order_id: ob-12345678
      operationId: get-transaction
      description: Get details for a transaction
    parameters:
      - schema:
          type: string
        name: transaction_id
        in: path
        required: true
        description: Transaction ID returned as  res value in return url after the Payment request.
  '/api/pay/v1/transactions/{transaction_id}/reruns':
    post:
      tags:
        - Transactions
      summary: Rerun transaction
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: transaction_id
          in: path
          description: The transaction ID
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      transaction_id:
                        type: string
                      status:
                        type: string
                      message:
                        type: string
                      amount:
                        type: number
                      currency:
                        type: string
                      payment_source:
                        type: string
                      customer_name:
                        type: string
                      customer_email:
                        type: string
                      merchant_data:
                        type: object
                x-examples:
                  Example 1:
                    data:
                      transaction_id: BL-0023C7F155
                      status: Pending Submission
                      message: Pending Submission
                      amount: 1.1
                      currency: GBP
                      payment_source: Direct Debit
                      customer_name: Test User
                      customer_email: testuser77888@yopmail.com
                      merchant_data:
                        order_id: 1234567
              examples:
                example-0:
                  summary: Transaction details - CC
                  value:
                    data:
                      transaction_id: BL-54URV6DLR5
                      status: Captured
                      message: Payment Successful
                      amount: 1.1
                      currency: GBP
                      payment_source: Visa Credit Card
                      customer_name: Miss Olivia Treutel
                      customer_email: Fausto0@gmail.com
                      merchant_data:
                        order_id: '12345678'
                example-1:
                  summary: Transaction details - DD
                  value:
                    data:
                      transaction_id: BL-0056F27B6A
                      status: Pending Submission
                      message: Pending Submission
                      amount: 1.1
                      currency: GBP
                      payment_source: Direct Debit
                      customer_name: Jermaine Ernser
                      customer_email: Devan.Price40@yahoo.com
                      merchant_data:
                        order_id: dd-12345678
                example-2:
                  summary: Transaction details - OB
                  value:
                    data:
                      transaction_id: BL-00C902BB94
                      status: Success
                      message: Success
                      amount: 1.1
                      currency: GBP
                      payment_source: Open Banking
                      customer_name: Nettie Stehr
                      customer_email: Hugh.McLaughlin@hotmail.com
                      merchant_data:
                        order_id: ob-12345678
      x-stoplight:
        id: c6zgw2jhejr4s
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  amount: 1.01
                  transaction_unique: ref7ng8
              properties:
                amount:
                  type: number
                  description: Transaction amount.
                transaction_unique:
                  type: string
                  description: Transaction unique.
            examples:
              Example 1:
                value:
                  amount: 0
                  transaction_unique: string
      description: |-
        User can rerun any existing transaction at any time which has been failed earlier. Authenticate this request using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request. 

        If the previous transaction had the following values for transaction_type, SALE or PREAUTH, then both fields amount and transaction_unique are optional, if they are not entered, then it should use the amount and transaction_unique from the previous transaction.

        If the previous transaction  had “VERIFY” as transaction_type, then amount field is required.
      operationId: rerun-transaction
    parameters:
      - schema:
          type: string
        name: transaction_id
        in: path
        required: true
        description: The id of the transaction
  '/api/pay/v1/transactions/{transaction_id}/captures':
    post:
      tags:
        - Transactions
      summary: Capture transaction
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: transaction_id
          in: path
          description: The transaction ID
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  amount:
                    type: string
                  reference:
                    type: string
                  transaction_id:
                    type: string
                x-examples:
                  Example 1:
                    success: true
                    message: Captured successfully
                    amount: '1.01'
                    reference: rif7ng8
                    transaction_id: BL-2349AGB
              examples:
                example-0:
                  summary: Transaction details - CC
                  value:
                    success: true
                    message: Captured successfully
                    amount: '1.01'
                    reference: rif7ng8
                    transaction_id: BL-2349AGB
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  amount: 1.01
                  transaction_unique: rif7ng8
              properties:
                amount:
                  type: number
                  description: Transaction amount.
                transaction_unique:
                  type: string
                  description: Transaction unique.
              required:
                - amount
                - transaction_unique
            examples:
              Example 1:
                value:
                  amount: 1.01
                  transaction_unique: rif7ng8
      description: |-
        User can capture a delay capture transaction earlier then the set day. Authenticate this request using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request.

        The previous transaction must have delay_capture_days set to be greater than 0 in the intent.
      x-stoplight:
        id: 4u7e41i65skli
      operationId: capture-transaction
    parameters:
      - schema:
          type: string
        name: transaction_id
        in: path
        required: true
        description: The id of the transaction
  '/api/pay/v1/transactions/{transaction_id}/cancels':
    post:
      summary: Cancel transaction
      tags:
        - Transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  description: Cancellation note (if any).
                  x-stoplight:
                    id: jm7sg3pot9167
            examples:
              Example 1:
                value:
                  reference: cancel note
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: transaction_id
          in: path
          description: The transaction ID
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  amount:
                    type: string
                  reference:
                    type: string
                  transaction_id:
                    type: string
              examples:
                Example 1:
                  value:
                    success: true
                    message: Cancelled successfully
                    amount: '1.01'
                    reference: cancel note
                    transaction_id: BL-2349AGB
      operationId: cancel-transaction
      description: |-
        User can cancel any existing transaction before being settled. It can only be performed on transactions, which have been authorised but not yet settled. Authenticate this request using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request. 

        If the previous transaction is in Captured state, then that transaction can be cancelled.
  '/api/pay/v1/transactions/{transaction_id}/refunds':
    post:
      summary: Refund transaction
      tags: 
        - Transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  partial_refund: true
                  amount: 1.01
                  reference: refund note
              properties:
                partial_refund:
                  type: boolean
                  description: 'If the transaction is a partial refund, then it set to be true. Default value is false.'
                  default: false
                amount:
                  type: number
                  description: Amount is required if it’s a partial refund. The amount must not be greater than the original received amount minus any already refunded amount.
                reference:
                  type: string
                  description: Amount is required if it’s a partial refund. The amount must not be greater than the original received amount minus any already refunded amount.
              required:
                - partial_refund
            examples:
              Example 1:
                value:
                  partial_refund: true
                  amount: 1.01
                  reference: refund note
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: transaction_id
          in: path
          description: The id of the transaction
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  amount:
                    type: integer
                  reference:
                    type: string
                  transaction_id:
                    type: string
                x-examples:
                  Example 1:
                    success: true
                    message: Refunded successfully
                    amount: '1.01'
                    reference: refund note
                    transaction_id: BL-2349AGB
              example:
                success: true
                message: Refunded successfully
                amount: 1
                reference: 'Refund Transaction at 07-09-23 10:05:35'
                transaction_id: BL-63U4P14ZR5
      operationId: refund-transaction
      description: |
        User can refund any existing transaction after being settled. It can only be performed on transactions, which have been authorised and settled. Authenticate this request using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request.'''
    parameters:
      - schema:
          type: string
        name: transaction_id
        in: path
        required: true
        description: The id of the transaction
  /api/pay/v1/repeat-payments:
    post:
      summary: Create repeat payment
      tags: 
        - Transactions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  payment_type: fixed_schedule
                  customer_name: John Doe
                  customer_email: john.doe@example.com
                  reference: payment_12345
                  frequency: Months
                  frequency_duration: 2
                  first_amount: 100.5
                  recurring_amount: 50.25
                  final_amount: 75
                  is_limited_installments: true
                  installments: 10
                  start_payment_date: '2023-09-16'
                  final_payment_date: '2025-07-16'
                  schedule_set: []
              properties:
                payment_type:
                  type: string
                  description: |-
                    Repeat payment type. It must be either of the following values.
                    - fixed_schedule
                    - variable_schedule
                customer_name:
                  type: string
                  description: Customer name.
                customer_email:
                  type: string
                  description: Customer email.
                reference:
                  type: string
                  description: Reference value. Unique textual details of the payment.
                frequency:
                  type: string
                  description: |-
                    Payment cycle frequency. It is required for Fixed Schedule payment. Possible values are:
                    - Days
                    - Weeks
                    - Months
                    - Years
                frequency_duration:
                  type: integer
                  description: Payment frequency duration. It is required for Fixed Schedule payment.
                first_amount:
                  type: number
                  description: 'First payment amount. For Fixed Schedule payment, first amount value can be customised.'
                recurring_amount:
                  type: number
                  description: Recurring amount for each instalment. It is required for Fixed Schedule payment.
                final_amount:
                  type: number
                  description: 'Final payment amount. For Fixed Schedule payment, final amount value can be customised.'
                is_limited_installments:
                  type: boolean
                  description: |-
                    It is required for Fixed Schedule payment to mention if the process has unlimited or limited instalments. Possible values are:
                    - true
                    - false
                installments:
                  type: integer
                  description: Number of installments. It is required for Fixed Schedule payment if the process has limited installments.
                start_payment_date:
                  type: string
                  description: Date on which the first payment will be captured. It is required for Fixed Schedule payment. Default value set to next day.
                final_payment_date:
                  type: string
                  description: Date on which the final payment will be captured. Final date can be customised along with the final amount for Fixed Schedule payment. It must be after start payment date.
                schedule_set:
                  type: object
                  description: Schedule set is a array set of date and amount where date will be the key and amount will be its value. It is required for Variable Schedule payment. This array needs to have minimum 2 set of values.
            examples:
              Example 1:
                value:
                  payment_type: variable_schedule
                  customer_name: test
                  customer_email: test@example.com
                  reference: variable schedule payment with limited installments
                  schedule_set:
                    13-02-2023: 20.02
                    16-02-2023: 22.02
                    19-02-2023: 30.02
                    25-02-2023: 26.02
              Example 2:
                value:
                  payment_type: fixed_schedule
                  customer_name: test
                  customer_email: test@example.com
                  reference: fixed schedule payment with limited installments
                  frequency: days
                  frequency_duration: 2
                  first_amount: 20.03
                  recurring_amount: 15.01
                  final_amount: 10.08
                  is_limited_installments: true
                  installments: 6
                  start_payment_date: 24-10-2023
                  final_payment_date: 03-11-2023
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  amount:
                    type: integer
                  reference:
                    type: string
                  transaction_id:
                    type: string
                x-examples:
                  Example 1:
                    success: true
                    message: Refunded successfully
                    amount: '1.01'
                    reference: refund note
                    transaction_id: BL-2349AGB
              example:
                success: true
                message: Refunded successfully
                amount: 1
                reference: 'Refund Transaction at 07-09-23 10:05:35'
                transaction_id: BL-63U4P14ZR5
      x-stoplight:
        id: pchymlk6ly71c
      description: |-
        Repeat payments are those which will be executed on recurring basis. There are two types of repeat payment. 

        Fixed Scheduled Repeat Payment

        Here each payment is taken at a regular frequency for a fixed amount. If a fixed schedule payment is created successfully, it will return html as card_element in response where user will fill in their card details.

        Variable Scheduled Repeat Payment

        Here each payment’s date and amount set is completely different. If a variable schedule payment is created successfully, it will return html  as card_element in response where user will fill in their card details and submit.

        User need to submit the tokenised card value (paymentToken)  to the Update Repeat Payment request to save the card token for the future transaction.

        After successful submission, user will get repeat payment id and status as response.

        Each request is authenticated using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request.

        In a PHP implementation, payment page may look like this:

        ```
        <head>
          ...
          <script src="https://code.jquery.com/jquery-3.6.3.min.js"></script>
          <script src="https://gateway2.blinkpayment.co.uk/sdk/web/v1/js/hostedfields.min.js"></script>
          <script src="https://secure.blinkpayment.co.uk/assets/js/api/custom.js"></script>
          ...
        </head>

        <body>
            <form method="POST" action="update" id="payment">
                @csrf
                {!! $card_element !!}
                <button type="submit">Submit</button>
            </form>
        </body>
        ```
      operationId: repeat-payment
    parameters: []
  /api/paylink/v1/paylinks:
    post:
      tags:
        - Paylink
      summary: Create paylink
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  payment_method:
                    - credit-card
                    - open-banking
                  transaction_type: SALE
                  full_name: Test Developer
                  email: testdeveloper@gmail.com
                  mobile_number: '9123908567'
                  transaction_unique: fyr7894
                  is_decide_amount: true
                  amount: 1
                  reminder: true
                  reminder_interval_count: 2
                  reminder_interval_frequency: days
                  notes: test note
                  notification_url: 'https://mydomain.com/notification'
              properties:
                payment_method:
                  type: array
                  description: |-
                    Can be one or more of the following:

                    - credit-card
                    - direct-debit
                    - open-banking 
                  items:
                    type: string
                transaction_type:
                  type: string
                  description: |-
                    Can be one of the following:

                    - SALE
                    - PREAUTH
                    - VERIFY CARD
                full_name:
                  type: string
                  description: |
                    Customer full name.
                email:
                  type: string
                  description: |
                    Customer email.
                mobile_number:
                  type: string
                  description: |
                    Customer mobile number.
                transaction_unique:
                  type: string
                  description: |
                    Unique transaction string.
                is_decide_amount:
                  type: boolean
                  description: |-
                    If customer will decide amount:

                    - true
                    - false 
                amount:
                  type: integer
                  description: |
                    Transaction amount.
                reminder:
                  type: boolean
                  description: |-
                    If reminder will be sent to customer:

                    - true
                    - false (default value)
                reminder_interval_count:
                  type: integer
                  description: |
                    If reminder is true, then need to mention the number of days/weeks
                reminder_interval_frequency:
                  type: string
                  description: |-
                    If reminder is true, then need to mention the interval frequency. It can be one of the following:

                    - days
                    - week
                notes:
                  type: string
                  description: |
                    Add any note to describe the Paylink request to the customer.
                notification_url:
                  type: string
                  description: 'POST URL on your domain, where Blink will send status updates when the transaction status is changed e.g. https://mydomain.com/notification.'
            examples:
              Example 1:
                value:
                  payment_method:
                    - credit-card
                    - open-banking
                  transaction_type: SALE
                  full_name: Test Developer
                  email: testdeveloper@gmail.com
                  mobile_number: '9123908567'
                  transaction_unique: fyr7894
                  is_decide_amount: true
                  amount: 1
                  reminder: true
                  reminder_interval_count: 2
                  reminder_interval_frequency: days
                  notes: test note
                  notification_url: 'https://mydomain.com/notification'
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: The authentication token
      responses:
        '201':
          description: Created
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  paylink_url:
                    type: string
                  transaction_unique:
                    type: string
                x-examples:
                  Example 1:
                    id: 123
                    paylink_url: 'https://secure.blinkpayment.co.uk/secondstore/l/5jkigj'
                    transaction_unique: fyr7894
              example:
                id: 281709
                paylink_url: 'https://secure.blinkpayment.co.uk/postmandemo/l/peqJESXrQ'
                transaction_unique: fyr7898906
      description: |-
        Authenticate requests using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request.

        Once a paylink is processed i.e. payment is done using that link, it can’t be used again to perform another transaction.
      operationId: create-paylink
    get:
      tags:
        - Paylink
      summary: Get all paylinks
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: status
          in: query
          schema:
            type: string
          example: unpaid
          description: Paylink status
        - name: amount
          in: query
          schema:
            type: integer
          example: 1
          description: Transaction amount.
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
        - schema:
            type: string
          in: query
          name: customer_name
          description: Customer name.
        - schema:
            type: string
          in: query
          name: amount_gt
          description: Amount should be greater than specified value
        - schema:
            type: string
          in: query
          name: amount_lt
          description: Amount should be less than specified value
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    paylink_url:
                      type: string
                    status:
                      type: string
                    created_by:
                      type: string
                    amount:
                      type: integer
                    currency:
                      type: string
                    transaction_type:
                      type: string
                    customer_name:
                      type: string
                    customer_email:
                      type: string
                    phone_number:
                      type: string
                    payment_method:
                      type: array
                      items:
                        type: string
                    is_decide_amount:
                      type: boolean
                    notes:
                      type: string
              examples:
                Example 1:
                  value:
                    - id: 123
                      paylink_url: 'https://dev.blinkpayment.co.uk/codatdev/l/asdhgl8'
                      status: Unpaid
                      created_by: Test developer
                      amount: 1
                      currency: GBP
                      transaction_type: SALE
                      customer_name: Demo Customer
                      customer_email: demo123@gmail.com
                      phone_number: '2374993932'
                      payment_method:
                        - credt-card
                        - open-banking
                      is_decide_amount: true
                      notes: test
                    - id: 124
                      paylink_url: 'https://dev.blinkpayment.co.uk/codatdev/l/asdhgl8'
                      status: Unpaid
                      created_by: Test developer
                      amount: 1
                      currency: GBP
                      transaction_type: SALE
                      customer_name: Demo Customer
                      customer_email: demo123@gmail.com
                      phone_number: '2374993932'
                      payment_method:
                        - open-banking
                      is_decide_amount: true
                      notes: test2
      operationId: get-paylinks
      description: |-
        Authenticate requests using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request.

        Once a paylink is processed i.e. payment is done using that link, it can’t be used again to perform another transaction.
  '/api/paylink/v1/paylinks/{paylink_id}':
    get:
      tags:
        - Paylink
      summary: Get paylink by paylink Id
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: paylink_id
          in: path
          description: The paylink ID
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  paylink_url:
                    type: string
                  status:
                    type: string
                  created_by:
                    type: string
                  amount:
                    type: integer
                  currency:
                    type: string
                  transaction_type:
                    type: string
                  customer_name:
                    type: string
                  customer_email:
                    type: string
                  phone_number:
                    type: string
                  payment_method:
                    type: array
                    items:
                      type: string
                  is_decide_amount:
                    type: boolean
                  notes:
                    type: string
              examples:
                Example 1:
                  value:
                    id: 123
                    paylink_url: 'https://dev.blinkpayment.co.uk/codatdev/l/asdhgl8'
                    status: Unpaid
                    created_by: Test developer
                    amount: 1
                    currency: GBP
                    transaction_type: SALE
                    customer_name: Demo Customer
                    customer_email: demo123@gmail.com
                    phone_number: '2374993932'
                    payment_method:
                      - credt-card
                      - open-banking
                    is_decide_amount: true
                    notes: test
      operationId: get-paylink
      description: |-
        Authenticate requests using HTTP Basic Auth by adding a bearer token to the header, e.g. Authentication: Bearer {{access_token}}. You can get the {{access_token}} from the create token request.

        Once a paylink is processed i.e. payment is done using that link, it can’t be used again to perform another transaction.
    patch:
      tags:
        - Paylink
      summary: Update paylink
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  email: testdemo@yopmail.com
              properties:
                email:
                  type: string
                  description: |
                    Email address
                mobile_number:
                  type: string
                  x-stoplight:
                    id: nbdr9hl42qs3r
                  description: |
                    Customer mobile number
                status:
                  type: string
                  x-stoplight:
                    id: 1j6ly1sax809p
                  description: |
                    Paylink status
      parameters:
        - name: Authorization
          in: header
          description: The authorization token
          schema:
            type: string
          example: 'Bearer {{access_token}}'
        - name: paylink_id
          in: path
          description: The paylink ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status:
                    type: string
                  created_by:
                    type: string
                  amount:
                    type: integer
                  currency:
                    type: string
                  transaction_type:
                    type: string
                  customer_name:
                    type: string
                  customer_email:
                    type: string
                  phone_number:
                    type: string
                  payment_method:
                    type: array
                    items:
                      type: string
                  is_decide_amount:
                    type: boolean
                  notes:
                    type: string
              examples:
                Example 1:
                  value:
                    id: 123
                    status: Unpaid
                    created_by: Test developer
                    amount: 1
                    currency: GBP
                    transaction_type: SALE
                    customer_name: Demo Customer
                    customer_email: demo123@gmail.com
                    phone_number: '2374993932'
                    payment_method:
                      - credt-card
                      - open-banking
                    is_decide_amount: true
                    notes: test
      description: 'Update some specific data (email, mobile number) associated with the paylink until the link is used. If a paylink is not paid  then it’s status can be changed to ‘Cancelled’.'
      operationId: update-paylink
    parameters:
      - schema:
          type: string
        name: paylink_id
        description: The id of the paylink
        in: path
        required: true
  '/api/paylink/v1/paylinks/{paylink_id}/notifications':
    post:
      tags:
        - Paylink
      summary: Paylink notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  send_sms: true
                  send_email: true
              properties:
                send_sms:
                  type: boolean
                  description: |
                    If send sms is true , it will sent notification through sms.
                send_email:
                  type: boolean
                  description: |
                    If send email is true , it will sent notification through email.

                    If both are true, then email and sms will be sent.
            examples:
              Example 1:
                value:
                  send_sms: true
                  send_email: true
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: 'Bearer {{access_token}}'
          description: Bearer eyJ0eXAiOiJKV1QiLCJhbG...
        - name: paylink_id
          in: path
          description: The paylink ID
          schema:
            type: string
          required: true
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    message: Notification sent
      operationId: paylink-notification
      description: Paylink notification
    parameters:
      - schema:
          type: string
        name: paylink_id
        in: path
        required: true
        description: id of the paylink
