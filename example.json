{
  "tags": [
    "Tokens"
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "type": "object",
          "properties": {
            "api_key": {
              "type": "string",
              "description": "256 alpha numeric, obtained through the Blink platform. \n"
            },
            "secret_key": {
              "type": "string",
              "description": "256 alpha numeric, obtained through the Blink platform. \n"
            },
            "payment_api_status": {
              "type": "boolean",
              "description": "To enable payment API , value should be set to true. This field is optional. If not passed, default value is true.\n\n- true\n- false\n"
            },
            "send_blink_receipt": {
              "type": "boolean",
              "description": "To enable Blink receipt feature after any transaction , value should be set to true. This field is optional. If not passed, default value is false.\n\n- true\n- false"
            },
            "address_postcode_required": {
              "type": "boolean",
              "description": "To fetch address and postcode details of any user for any transaction , value should be set to true. This field is optional. If not passed, default value is false.\n\n- true\n- false"
            },
            "enable_moto_payments": {
              "type": "boolean",
              "description": "To enable MOTO payment feature for any transaction , value should be set to true. This field is optional. If not passed, default value is false.\n\n- true\n- false"
            }
          },
          "required": [
            "api_key",
            "secret_key"
          ]
        },
        "examples": {
          "Example request": {
            "value": {
              "api_key": "49f98f211008be298aaa244...",
              "secret_key": "44b51da04a1ff0caa73afd...",
              "payment_api_status": true,
              "send_blink_receipt": true,
              "address_postcode_required": true,
              "enable_moto_payments": true
            }
          }
        }
      }
    },
    "description": ""
  },
  "responses": {
    "200": {
      "description": "OK",
      "headers": {},
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "expired_on": {
                "type": "string"
              },
              "payment_types": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currency": {
                "type": "string"
              },
              "payment_api_status": {
                "type": "boolean"
              },
              "send_blink_receipt": {
                "type": "boolean"
              },
              "address_postcode_required": {
                "type": "boolean"
              },
              "enable_moto_payments": {
                "type": "boolean"
              }
            }
          },
          "examples": {
            "example-0": {
              "summary": "400 Bad Request",
              "value": {
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbG...",
                "expired_on": "2023-01-01T12:00:00Z",
                "payment_types": [
                  "credit-card",
                  "open-banking",
                  "direct-debit"
                ],
                "currency": "GBP",
                "payment_api_status": true,
                "send_blink_receipt": true,
                "address_postcode_required": true,
                "enable_moto_payments": true
              }
            }
          }
        }
      }
    },
    "201": {
      "description": "Created",
      "headers": {},
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "expired_on": {
                "type": "string"
              },
              "payment_types": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currency": {
                "type": "string"
              },
              "payment_api_status": {
                "type": "boolean"
              },
              "send_blink_receipt": {
                "type": "boolean"
              },
              "address_postcode_required": {
                "type": "boolean"
              },
              "enable_moto_payments": {
                "type": "boolean"
              }
            },
            "x-examples": {
              "Example 1": {
                "access_token": "eyJ0eXAiOiJKV1QiLCJhbG...",
                "expired_on": "2023-01-01T12:00:00Z",
                "payment_types": [
                  "credit-card",
                  "open-banking",
                  "direct-debit"
                ],
                "currency": "GBP",
                "payment_api_status": true,
                "send_blink_receipt": true,
                "address_postcode_required": true,
                "enable_moto_payments": true
              }
            }
          },
          "example": {
            "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtZXJjaGFudF9pZCI6NDM5OCwic2VjcmV0X2tleSI6IjYzMTBlNDhiZGQwZTQzODE0NTlhNjJiNDZkMmM0ZmQ2ZThhYjY1YTJhNGQ1MjA1YzZjM2RkZWJmYmJhZWJiZjgiLCJleHAiOjE2OTE1NzYyNDJ9.2x7nhth9SBKN_9rGCXppGO5Soqbf8PvJS_4MEAQP4Kk",
            "expired_on": "2023-08-09T11:17:22Z",
            "payment_types": [
              "credit-card",
              "open-banking"
            ],
            "currency": "GBP",
            "payment_api_status": true,
            "send_blink_receipt": true,
            "enable_moto_payments": true,
            "address_postcode_required": true
          }
        }
      }
    },
    "400": {
      "description": "Bad Request",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "access_token": {
                "type": "string"
              },
              "expired_on": {
                "type": "string"
              },
              "payment_types": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "currency": {
                "type": "string"
              },
              "send_blink_receipt": {
                "type": "string"
              }
            },
            "x-examples": {
              "Example 1": {
                "access_token": "ffaabb123456789012ffaabb123456789012...",
                "expired_on": "2023-02-15T07:19:27Z",
                "payment_types": [
                  "credit-card",
                  "open-banking",
                  "direct-debit"
                ],
                "currency": "GBP",
                "send_blink_receipt": "No"
              }
            }
          }
        }
      }
    }
  },
  "description": "To authenticate requests, the Blink API uses an api_key and secret_key combination, which is used to obtain an access_token for your session.\n\nHTTP Basic Auth is used for authentication. The access_token should be used via bearer in the header to authenticate all requests, e.g. Authentication: Bearer {{access_token}}.\n\nAccess token is expired after 30 minutes. Then, you need to create a new token.\n\nYou can manage and renew your keys on the Blink platform. In case you do not see the keys, simply reach out to support to get set up.\n\nIt is essential to keep your API keys secure as they hold significant privileges. Refrain from sharing your secret API keys in public areas such as GitHub, client-side code, etc.\n\nAll API requests must be made over HTTPS. Requests made over plain HTTP will be unsuccessful. API requests that lack authentication will also fail.",
  "parameters": [
    {
      "schema": {
        "type": "string"
      },
      "in": "header",
      "name": "Content-Type",
      "description": "application/json"
    }
  ],
  "operationId": "Tokens",
  "method": "post",
  "path": "/api/pay/v1/Tokens",
  "servers": [
    {
      "url": "https://secure.blinkpayment.co.uk"
    },
    {
      "url": "https://gateway2.blinkpayment.co.uk"
    }
  ],
  "jsonRequestBodyExample": {
    "api_key": "string",
    "secret_key": "string",
    "payment_api_status": true,
    "send_blink_receipt": true,
    "address_postcode_required": true,
    "enable_moto_payments": true
  },
  "info": {
    "title": "Blink Payment v1.0.20",
    "description": "Blink Payment API Docs",
    "version": "1.0.0",
    "contact": {
      "name": "Blink Payment",
      "email": "developers@blinkpayment.co.uk",
      "url": "blinkpayment.co.uk"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "postman": {
    "name": "Tokens",
    "description": {
      "content": "To authenticate requests, the Blink API uses an api_key and secret_key combination, which is used to obtain an access_token for your session.\n\nHTTP Basic Auth is used for authentication. The access_token should be used via bearer in the header to authenticate all requests, e.g. Authentication: Bearer {{access_token}}.\n\nAccess token is expired after 30 minutes. Then, you need to create a new token.\n\nYou can manage and renew your keys on the Blink platform. In case you do not see the keys, simply reach out to support to get set up.\n\nIt is essential to keep your API keys secure as they hold significant privileges. Refrain from sharing your secret API keys in public areas such as GitHub, client-side code, etc.\n\nAll API requests must be made over HTTPS. Requests made over plain HTTP will be unsuccessful. API requests that lack authentication will also fail.",
      "type": "text/plain"
    },
    "url": {
      "path": [
        "api",
        "pay",
        "v1",
        "Tokens"
      ],
      "host": [
        "{{baseUrl}}"
      ],
      "query": [],
      "variable": []
    },
    "header": [
      {
        "key": "Content-Type",
        "value": "application/json"
      },
      {
        "key": "Accept",
        "value": "application/json"
      }
    ],
    "method": "POST",
    "body": {
      "mode": "raw",
      "raw": "\"\"",
      "options": {
        "raw": {
          "language": "json"
        }
      }
    }
  }
}